{"version":3,"sources":["rainbow.svg","change.js","explanation.js","App.js","reportWebVitals.js","index.js"],"names":["Change","state","count","colour","cleared","countforward","bind","countback","double","halve","clear","this","setState","prevState","prevProps","newColour","randomColor","style","backgroundColor","className","onClick","React","Component","Explanation","App","src","rainbow","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAe,G,MAAA,IAA0B,qC,kEC4F1BA,E,kDAtFX,aAAc,IAAD,8BACT,gBACKC,MAAM,CACPC,MAAM,EACNC,OAAQ,GACRC,SAAS,GAGb,EAAKC,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,UAAU,EAAKA,UAAUD,KAAf,gBACf,EAAKE,OAAO,EAAKA,OAAOF,KAAZ,gBACZ,EAAKG,MAAM,EAAKA,MAAMH,KAAX,gBACX,EAAKI,MAAM,EAAKA,MAAMJ,KAAX,gBAZF,E,gDAiBb,WACGK,KAAKC,UAAS,SAAAC,GACV,MAAO,CACHX,MAAOW,EAAUX,MAAM,EACvBE,SAAQ,Q,uBAMnB,WACIO,KAAKC,UAAS,SAAAC,GACV,MAAO,CACHX,MAAOW,EAAUX,MAAM,EACvBE,SAAQ,Q,oBAKnB,WACIO,KAAKC,UAAS,SAAAC,GACV,MAAO,CACHX,MAAuB,EAAhBW,EAAUX,MACjBE,SAAQ,Q,mBAKpB,WACIO,KAAKC,UAAS,SAAAC,GACV,MAAO,CACHX,MAAOW,EAAUX,MAAM,EACvBE,SAAQ,Q,mBAMrB,WACIO,KAAKC,SAAS,CAACT,OAAO,GAAID,MAAM,EAAGE,SAAQ,M,gCAI9C,SAAmBU,EAAWD,GAC3B,GAAGA,EAAUX,QAAUS,KAAKV,MAAMC,QAA8B,IAArBS,KAAKV,MAAMG,QAAiB,CACnE,IAAMW,EAAYC,MAClBL,KAAKC,SAAS,CAACT,OAAQY,EAAWX,SAAQ,O,oBAIlD,WACI,OAII,gCACI,mBAAGa,MAAO,CAACC,gBAAiBP,KAAKV,MAAME,QAASgB,UAAU,aAA1D,SAAwER,KAAKV,MAAMC,QACnF,wBAAQkB,QAAST,KAAKN,aAAtB,qBACA,wBAAQe,QAAST,KAAKJ,UAAtB,kBACA,wBAAQa,QAAST,KAAKH,OAAtB,oBACA,wBAAQY,QAAST,KAAKF,MAAtB,mBACA,wBAAQU,UAAU,cAAcC,QAAST,KAAKD,MAA9C,0B,GA/EKW,IAAMC,WCOZC,MAVf,WACI,OACI,sBAAKJ,UAAU,cAAf,UACI,wDAA0B,8CAA1B,6BACA,6DAA+B,iDAA/B,OACA,qCAAO,wDAAP,8ECaGK,MAff,WACE,OACE,sBAAKL,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKM,IAAKC,EAASP,UAAU,WAAWQ,IAAI,SAC5C,mDAEF,sBAAKR,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCFOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4b793cba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rainbow.a8ac5237.svg\";","import randomColor from \"randomcolor\"\r\nimport React from \"react\"\r\n\r\n\r\n\r\nclass Change extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            count:0,\r\n            colour: \"\",\r\n            cleared: true\r\n        }\r\n\r\n        this.countforward=this.countforward.bind(this)\r\n        this.countback=this.countback.bind(this)\r\n        this.double=this.double.bind(this)\r\n        this.halve=this.halve.bind(this)\r\n        this.clear=this.clear.bind(this)\r\n    }\r\n\r\n\r\n\r\n    countforward() {\r\n       this.setState(prevState =>{\r\n           return {\r\n               count: prevState.count+1,\r\n               cleared:false\r\n            }\r\n               \r\n            })\r\n    }\r\n\r\n    countback() {\r\n        this.setState(prevState =>{\r\n            return {\r\n                count: prevState.count-1,\r\n                cleared:false\r\n            } \r\n             })\r\n     }\r\n\r\n     double(){\r\n         this.setState(prevState =>{\r\n             return {\r\n                 count: prevState.count*2,\r\n                 cleared:false\r\n             }\r\n         })\r\n     }\r\n\r\n     halve(){\r\n         this.setState(prevState=>{\r\n             return {\r\n                 count: prevState.count/2,\r\n                 cleared:false\r\n             }\r\n         })\r\n     }\r\n     \r\n\r\n    clear(){\r\n        this.setState({colour:\"\", count:1, cleared:true})\r\n\r\n    }\r\n\r\n     componentDidUpdate(prevProps, prevState) {\r\n        if(prevState.count !== this.state.count && this.state.cleared===false) {\r\n            const newColour = randomColor()\r\n            this.setState({colour: newColour, cleared:false})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n\r\n  \r\n\r\n            <div >\r\n                <p style={{backgroundColor: this.state.colour}} className=\"numDisplay\">{this.state.count}</p>\r\n                <button onClick={this.countforward}>forward</button>\r\n                <button onClick={this.countback}>back</button>\r\n                <button onClick={this.double}>double</button>\r\n                <button onClick={this.halve}>halve</button>\r\n                <button className=\"clearButton\" onClick={this.clear}>clear</button>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Change","import React from 'react'\r\n\r\nfunction Explanation(){\r\n    return(\r\n        <div className=\"explanation\">\r\n            <p>This counting app uses <strong>setstate</strong> to update the numbers.</p>\r\n            <p>It uses a dependency called <strong>randomColor</strong>.</p>\r\n            <p>The <strong>componentDidUpdate</strong> method sets the background colour each time the counter is updated.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Explanation","import rainbow from './rainbow.svg';\nimport './App.css';\nimport Change from './change'\nimport Explanation from './explanation'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={rainbow} className=\"App-logo\" alt=\"logo\" />\n        <p>Rainbow Counter</p>\n      </header>\n      <div className=\"mainWrapper\">\n        <Explanation />\n        <Change />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}